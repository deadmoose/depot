<?xml version="1.0"?>
<project name="depot" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">
  <!-- project metadata -->
  <property name="lib.name"     value="depot"/>
  <property name="src.dir"      value="src/main/java"/>
  <property name="test.dir"     value="src/test/java"/>
  <property name="deploy.dir"   value="dist"/>
  <property name="classes.dir"  value="${deploy.dir}/classes"/>
  <property name="tclasses.dir" value="${deploy.dir}/test-classes"/>
  <property name="javadoc.dir"  value="${deploy.dir}/docs"/>

  <property name="maven-ant.vers" value="2.1.1"/>
  <property name="maven-ant.dir" value="${user.home}/.m2/ant-support"/>
  <property name="maven-ant.jar" value="${maven-ant.dir}/maven-ant-tasks-${maven-ant.vers}.jar"/>
  <property name="maven-ant.url" value="http://mirrors.ibiblio.org/pub/mirrors/apache/maven/binaries"/>
  <condition property="maven-ant.exists"><available file="${maven-ant.jar}"/></condition>
  <target name="-download-maven-ant" unless="maven-ant.exists">
    <mkdir dir="${maven-ant.dir}"/>
    <get src="${maven-ant.url}/maven-ant-tasks-${maven-ant.vers}.jar" 
         dest="${maven-ant.jar}" usetimestamp="true"/>
  </target>

  <target name="-init-maven-ant" depends="-download-maven-ant">
    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant" classpath="${maven-ant.jar}"/>
    <artifact:pom id="pom" file="pom.xml"/>
    <artifact:dependencies pathId="classpath" pomRefId="pom"/>
  </target>

  <target name="-prepare" depends="-init-maven-ant">
    <mkdir dir="${deploy.dir}"/>
  </target>

  <target name="genrecord" depends="-prepare"
          description="Generates fields for persistent record classes.">
    <taskdef name="grecord" classname="com.samskivert.depot.tools.GenRecordTask"
             classpathref="classpath"/>
    <!-- make sure the record class files are all compiled -->
    <javac destdir="${classes.dir}" debug="on" optimize="${build.optimize}" deprecation="on">
      <src name="${src.dir}"/>
      <src name="${test.dir}"/>
      <classpath refid="classpath"/>
      <include name="**/*Record.java"/>
    </javac>
    <!-- now update the source files -->
    <grecord classpathref="classpath">
      <fileset dir="${src.dir}" includes="**/*Record.java"/>
      <fileset dir="${test.dir}" includes="**/*Record.java"/>
    </grecord>
  </target>

  <target name="clean" description="Cleans out build results.">
    <delete dir="${classes.dir}"/>
    <delete dir="${javadoc.dir}"/>
    <delete failonerror="false"><fileset dir="${deploy.dir}" includes="*.jar"/></delete>
  </target>

  <target name="distclean" description="Completely removes build result directory.">
    <delete dir="${deploy.dir}"/>
  </target>

  <target name="compile" depends="-prepare" description="Compiles the code.">
    <mkdir dir="${classes.dir}"/>
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" includes="**/*.tmpl"/>
    </copy>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}" source="1.5" target="1.5" encoding="utf-8">
      <classpath refid="classpath"/>
      <exclude name="com/samskivert/depot/OldEHCacheAdapter.java" unless="build.ehcache"/>
      <exclude name="com/samskivert/depot/EHCacheAdapter.java" unless="build.ehcache"/>
      <exclude name="com/samskivert/depot/tools/**" unless="build.tools"/>
      <exclude name="com/samskivert/depot/tests/**" unless="build.tests"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <target name="test-compile" depends="compile" description="Compiles test classes.">
    <mkdir dir="${tclasses.dir}"/>
    <javac srcdir="${test.dir}" destdir="${tclasses.dir}" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}" source="1.5" target="1.5" encoding="utf-8">
      <classpath>
        <pathelement location="${classes.dir}"/>
        <path refid="classpath"/>
      </classpath>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <target name="javadoc" depends="-prepare" description="Generates javadoc documentation.">
    <mkdir dir="${javadoc.dir}"/>
    <tstamp><format property="year" pattern="yyyy" /></tstamp>
    <javadoc windowtitle="${lib.name} API" doctitle="${lib.name} API"
             overview="src/main/javadoc/overview.html" destdir="${javadoc.dir}"
             additionalparam="-breakiterator">
      <packageset dir="${src.dir}">
        <exclude name="com/samskivert/depot/impl/**"/>
        <exclude name="com/samskivert/depot/tests/**"/>
        <exclude name="com/samskivert/depot/EHCacheAdapter.java" unless="build.ehcache"/>
        <exclude name="com/samskivert/depot/tools/**" unless="build.tools"/>
      </packageset>
      <bottom>Copyright &#169; 2006-${year} Michael Bayne, et al. All Rights Reserved.</bottom>
      <classpath refid="classpath"/>
      <link href="http://java.sun.com/j2se/1.5/docs/api/"/>
    </javadoc>
  </target>

  <target name="all" depends="clean,compile,javadoc,dist"
          description="Cleans and rebuilds everything including documentation."/>

  <target name="tests" depends="test-compile" description="Runs the unit tests.">
    <!-- allows passing -Dtest=NamePrefix to restrict to subset of tests -->
    <property name="test" value=""/>
    <taskdef name="unit" classpathref="classpath"
      classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>
    <unit printsummary="off" haltonfailure="yes" fork="${junit.fork}">
      <classpath>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${tclasses.dir}"/>
        <pathelement location="${basedir}"/> <!-- for rsrc/ -->
        <fileset dir="${deploy.dir}/lib" includes="*.jar"/>
      </classpath>
      <sysproperty key="com.samskivert.depot.debug" value="${debug}"/>
      <formatter type="brief" usefile="false"/>
      <batchtest>
        <fileset dir="${test.dir}">
          <include name="**/${test}*Test.java"/>
          <exclude name="com/samskivert/depot/EHCacheAdapter.java" unless="ehcache.present"/>
        </fileset>
      </batchtest>
    </unit>
  </target>

  <target name="dist" depends="compile" description="Compiles code and builds jar file.">
    <jar destfile="${deploy.dir}/${lib.name}.jar" basedir="${classes.dir}"/>
  </target>
</project>
